name: SwaggerHub Integration
on: workflow_dispatch
jobs:
  Hello:
   runs-on: ubuntu-latest
   steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      - name: Lint Code Base
        uses: github/super-linter@v4
        id: lintcode
        env:
          VALIDATE_OPENAPI: true
          DEFAULT_BRANCH: swaggerhub
          CREATE_LOG_FILE: true
          LOG_FILE: linter.log
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: List files
        id: lintOutput
        if: failure() && steps.lintcode.outcome == 'failure'
        run: |
          ERROR_REGEX='^.*:(.*)\serror\s.*$'
          #ERROR_REGEX='^.*(\d*):(\d*)(\s*)error\s.*$'
          grep -Eoh "$ERROR_REGEX" linter.log > aaa.log
          #grep "error" linter.log > error.log
          ls -a
          echo "::::::::::::::::::::::::::"
          echo "`cat aaa.log`"
          echo "------------------------"
          echo "TAG_NAME="`cat aaa.log`"" >> $GITHUB_OUTPUT
          #echo "TAG_NAME1=$var2" >> $GITHUB_OUTPUT
          #test-var="cat aaa.log"
          #echo "${test-var}"
      - name: Extract errors
        id: log-extract
        if: failure() && steps.lintcode.outcome == 'failure'
        run: |
          ERROR_REGEX='^.*:(.*)\serror\s.*$'
          ERROR_FILE=$(grep -Eoh "$ERROR_REGEX" linter.log)
          #ERROR_MESSAGE=$(grep -Eoh "$ERROR_REGEX" linter.log)
          sed -i -e 's#"##g' linter.log
          echo "#################################"
          #echo "${linter.log}"
          #echo "error-logs=${ERROR_MESSAGE}" >> $GITHUB_OUTPUT
          echo $(cat output.txt)
      - name: Print logs of previous step 
        if: failure() && steps.lintcode.outcome == 'failure'
        run: |
           echo  "${{ steps.lintOutput.outputs.TAG_NAME }}"
      - name: remove doublequotes 
        id: finalOutput
        if: failure() && steps.lintcode.outcome == 'failure'
        run: |
           echo  "${{ steps.lintOutput.outputs.TAG_NAME }}"
           var2=`sed -e 's/^"//' -e 's/"$//' <<<"${{ steps.lintOutput.outputs.TAG_NAME }}"`
           echo "-------------------------------"
           echo "$var2"
           echo "TAG_NAME1=${var2}" >> $GITHUB_OUTPUT
      - name: Update swagerHub
        if: failure() && steps.lintcode.outcome == 'failure'
        run: |
         echo "out1=${{ steps.finalOutput.outputs.TAG_NAME1 }}" >> $GITHUB_OUTPUT      
         curl -X 'POST' \
          'https://api.swaggerhub.com/apis/RAJESHP1231234_1/Rajesh/1.0.0/comments' \
           -H 'accept: application/json' \
           -H 'Authorization: 2f28cdbb-c5df-4146-a8c4-05046a380d00' \
            -H 'Content-Type: application/json' \
           -d '{
            "position": 0,
            "body": "$out1"
          }'
      - name: External Api call (Weather Map)
        run: |
           HTTP_CODE=$(curl --write-out "%{http_code}\n" "https://samples.openweathermap.org/data/2.5/weather?q=London,uk&appid=b6907d289e10d714a6e88b30761fae22" --output output.txt --silent)
      - name: Print External Api call Output 
        run: |
           echo $(cat output.txt)
