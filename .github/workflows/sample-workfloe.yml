name: SwaggerHub Integration
on: workflow_dispatch
jobs:
  Hello:
   runs-on: ubuntu-latest
   steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0

      - name: Lint Code Base
        uses: github/super-linter@v4
        id: lintcode
        env:
          VALIDATE_OPENAPI: true
          DEFAULT_BRANCH: swaggerhub
          CREATE_LOG_FILE: true
          LOG_FILE: linter.log
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: List files
        id: lintOutput
        if: failure() && steps.lintcode.outcome == 'failure'
        run: |
          #ERROR_REGEX='^.*:(.*)\serror\s.*$'
          ERROR_REGEX='^(\s)*(\d)*:(\d)*\serror\s.*$'
          #ERROR_REGEX='^.*(\d*):(\d*)(\s*)error\s.*$'
          #grep -Eoh "^\s\+\d\+:\d\+\s\+error\s\+.*$" linter.log > error.log
          grep -Eoh "$ERROR_REGEX" linter.log > error.log
          ERROR_MESSAGE=$(sed -i 's#"##g' error.log)
          ERROR_MESSAGE1=$(sed -i ':a;N;$!ba;s/\n/ /g' error.log)
          #ERROR_MESSAGE=$(sed -i  's/^"//' -i 's/"$//' error.log)
          echo "#################################"
          echo $(cat error.log)
          echo "error-logs=${ERROR_MESSAGE}" >> $GITHUB_OUTPUT
      - name: Update swagerHub
        if: failure() && steps.lintcode.outcome == 'failure'
        run: |
         ERROR_MSG=$(cat error.log)
         #request_payload={\"body\":\"$ERROR_MSG\"}
         #echo "${ERROR_MSG}"
         sh ./.github/scripts/apicall.sh
        shell: bash
